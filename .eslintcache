[{"E:\\xampp\\htdocs\\weather-app\\src\\index.js":"1","E:\\xampp\\htdocs\\weather-app\\src\\App.js":"2","E:\\xampp\\htdocs\\weather-app\\src\\reportWebVitals.js":"3","E:\\xampp\\htdocs\\weather-app\\src\\setup\\index.js":"4","E:\\xampp\\htdocs\\weather-app\\src\\setup\\About.js":"5","E:\\xampp\\htdocs\\weather-app\\src\\setup\\Home.js":"6","E:\\xampp\\htdocs\\weather-app\\src\\setup\\Error.js":"7","E:\\xampp\\htdocs\\weather-app\\src\\setup\\NavbarPage.js":"8","E:\\xampp\\htdocs\\weather-app\\src\\setup\\CurrentWeatherData.js":"9","E:\\xampp\\htdocs\\weather-app\\src\\setup\\WeeklyWeather.js":"10","E:\\xampp\\htdocs\\weather-app\\src\\setup\\HourlyWeather.js":"11","E:\\xampp\\htdocs\\weather-app\\src\\setup\\Timer.js":"12","E:\\xampp\\htdocs\\weather-app\\src\\setup\\Search.js":"13"},{"size":527,"mtime":1612871698969,"results":"14","hashOfConfig":"15"},{"size":122,"mtime":1622377138354,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":1003,"mtime":1623061052072,"results":"18","hashOfConfig":"15"},{"size":2951,"mtime":1625048773292,"results":"19","hashOfConfig":"15"},{"size":641,"mtime":1621957534239,"results":"20","hashOfConfig":"15"},{"size":766,"mtime":1622197595486,"results":"21","hashOfConfig":"15"},{"size":1477,"mtime":1625837108393,"results":"22","hashOfConfig":"15"},{"size":5529,"mtime":1624361267746,"results":"23","hashOfConfig":"15"},{"size":6192,"mtime":1625581390841,"results":"24","hashOfConfig":"15"},{"size":2662,"mtime":1621955162747,"results":"25","hashOfConfig":"15"},{"size":528,"mtime":1624216821600,"results":"26","hashOfConfig":"15"},{"size":666,"mtime":1625837131558,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1urb182",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"30"},"E:\\xampp\\htdocs\\weather-app\\src\\index.js",[],["62","63"],"E:\\xampp\\htdocs\\weather-app\\src\\App.js",[],"E:\\xampp\\htdocs\\weather-app\\src\\reportWebVitals.js",[],"E:\\xampp\\htdocs\\weather-app\\src\\setup\\index.js",[],"E:\\xampp\\htdocs\\weather-app\\src\\setup\\About.js",["64","65","66"],"import React from  'react';\r\nimport {IoLogoFacebook} from 'react-icons/io'\r\nimport {FiTwitter} from 'react-icons/fi'\r\nimport {ImYoutube2} from 'react-icons/im'\r\nimport {AiFillLinkedin} from 'react-icons/ai'\r\nimport {GrInstagram} from 'react-icons/gr'\r\nimport Image from './assets/openweather-icon.png'\r\nimport Image2 from './assets/google-play.png'\r\nimport Image3 from './assets/app-store.png'\r\nimport aboutCSS from './about.module.css'\r\n\r\nfunction ReturnSection() {\r\n  \r\n  return (\r\n      <footer className={aboutCSS.footerContainer}>\r\n        <div className={aboutCSS.footerDiv}>\r\n          <div className={aboutCSS.greyLineTwo}></div>\r\n          <b className={aboutCSS.weatherAppText}>Connect With Us</b>\r\n          <div id=\"sm\" className={aboutCSS.footerSocialMedia}>\r\n            <a href=\"https://www.facebook.com/\" className={aboutCSS.smFacebook}>\r\n              <IoLogoFacebook size=\"30px\" />\r\n            </a>\r\n            <a href=\"https://twitter.com/\" className={aboutCSS.smTwitter}>\r\n              <FiTwitter size=\"30px\" />\r\n            </a>\r\n            <a href=\"https://www.youtube.com/\" className={aboutCSS.smYoutube}> \r\n              <ImYoutube2 size=\"30px\" />\r\n            </a>\r\n            <a href=\"https://www.instagram.com/\" className={aboutCSS.smInstagram}>\r\n              <GrInstagram size=\"30px\" /> \r\n            </a>\r\n            <a href=\"https://www.linkedin.com/\" className={aboutCSS.smLinkedin}>\r\n              <AiFillLinkedin size=\"30px\" /> \r\n            </a>\r\n          </div>\r\n          <div className={aboutCSS.footerLinks}>\r\n            <a href=\"https://en.wikipedia.org/wiki/Privacy_policy\"><b>Privacy Policy</b></a>\r\n            <p className={aboutCSS.footerLinksOne}>|</p>\r\n            <a className={aboutCSS.footerLinksTwo} href=\"https://en.wikipedia.org/wiki/Terms_of_service\"><b>Terms Of Service</b></a>\r\n            <p className={aboutCSS.footerLinksOne}>|</p>\r\n            <a href=\"https://en.wikipedia.org/wiki/FAQ\"><b>FAQ</b></a>\r\n          </div>\r\n          <p className={aboutCSS.weatherAppTextTwo}>Thank you for using WeatherApp!</p>\r\n          <a href=\"https://openweathermap.org/\" className={aboutCSS.weatherAppTextThree}>Powered By OpenWeather</a>\r\n          <a href=\"https://openweathermap.org/\"><img src={Image} className={aboutCSS.weatherImage}  alt=\"No Image Available\"/></a>\r\n          <div className={aboutCSS.greyLine}></div>\r\n          <p className={aboutCSS.weatherAppTextFour}>Â© 2021 WeatherApp, Inc. \"WeatherApp\" and sun design are registered trademarks of WeatherApp, Inc.</p>\r\n          <div className={aboutCSS.appImages}>\r\n            <a href=\"https://play.google.com/store/apps\"><img src={Image2} className={aboutCSS.appImage} alt=\"No Image Available\"/></a>\r\n            <a href=\"https://play.google.com/store/apps\"><img src={Image3} className={aboutCSS.appImage} alt=\"No Image Available\"/></a>\r\n          </div>\r\n        </div>\r\n      </footer> \r\n  )\r\n}\r\n\r\nexport default ReturnSection;","E:\\xampp\\htdocs\\weather-app\\src\\setup\\Home.js",[],"E:\\xampp\\htdocs\\weather-app\\src\\setup\\Error.js",["67"],"import React from  'react';\r\nimport {Link} from 'react-router-dom'\r\nimport {Button} from 'react-bootstrap'\r\nimport errorCSS from './error.module.css'\r\nimport Image4 from './assets/404-not-found.png'\r\n\r\nconst Error = () => {\r\n\r\n  return (\r\n    <body id=\"bodyId\">\r\n      <div className={errorCSS.errorDiv} >\r\n        <img src={Image4} className={errorCSS.errorImage} alt=\"No Image Available\"/>  \r\n        <h1 className={errorCSS.title}>Whoops!</h1>\r\n        <p>The page you were looking for does not exist! Click on the button to return to the Home Page</p>\r\n        <Link to='/'>\r\n          <Button className={errorCSS.btn} variant=\"primary\">Go Back To Home</Button>{' '}\r\n        </Link>        \r\n      </div> \r\n    </body>\r\n        \r\n  )\r\n}\r\n\r\nexport default Error;","E:\\xampp\\htdocs\\weather-app\\src\\setup\\NavbarPage.js",["68"],"import React from  'react';\r\nimport {Link} from 'react-router-dom'\r\nimport { Navbar, Nav,  NavDropdown } from 'react-bootstrap'\r\nimport navbarCSS from './navbar.module.css'\r\n\r\nconst NavbarPage = () => {\r\n  return (\r\n    <>\r\n      <Navbar bg=\"light\" expand=\"lg\" fixed=\"top\" className={navbarCSS.mainNav}>\r\n        <Navbar.Brand className={navbarCSS.weatherApp} href=\"/\">WeatherApp</Navbar.Brand>\r\n        <Link to=\"/\"><img width=\"47\" height=\"47\" className={navbarCSS.icon} src=\"https://images-na.ssl-images-amazon.com/images/I/81%2BeUvsHXoL.png\" alt=\"No Logo Available\"/></Link>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\" className={navbarCSS.navMain}>\r\n              <Nav.Link href=\"/\">Home</Nav.Link>\r\n                <NavDropdown title=\"More Weather Options\" id=\"basic-nav-dropdown\" className={navbarCSS.nav}>\r\n                <NavDropdown.Item href=\"/weekly\">7 Day Forecast</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"/hourly\">Hourly Forecast</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"https://www.wunderground.com/history\">Historical data for 5 previous days</NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item  href=\"/about\">About</NavDropdown.Item>\r\n              </NavDropdown>\r\n            </Nav>\r\n        </Navbar.Collapse>\r\n    </Navbar> \r\n  </>\r\n  )  \r\n}\r\n\r\n\r\nexport default NavbarPage;","E:\\xampp\\htdocs\\weather-app\\src\\setup\\CurrentWeatherData.js",["69","70","71","72","73"],"import React, {useState, useEffect} from 'react'\r\nimport { Card, Spinner} from 'react-bootstrap'\r\nimport { Modal, Button } from 'react-bootstrap'\r\nimport {IoSearch} from 'react-icons/io5'\r\nimport {FaTemperatureHigh} from 'react-icons/fa'\r\nimport {WiHumidity} from 'react-icons/wi'\r\nimport {FiWind} from 'react-icons/fi'\r\nimport {MdVisibility} from 'react-icons/md'\r\nimport {GiWindsock} from 'react-icons/gi'\r\nimport {WiBarometer} from 'react-icons/wi'\r\nimport Home from './Home'\r\nimport indexCSS from './index.module.css'\r\nimport Timer from './Timer'\r\nimport Search from './Search'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst api = {\r\n  key: 'c3512f3ec8bd5a8b7c26d9756efd841c',\r\n  base: 'https://api.openweathermap.org/data/2.5/' \r\n}\r\n\r\n\r\nconst CurrentWeatherData = () => {\r\n  \r\n  const history = useHistory();\r\n  const [weather, setWeather] = useState({})\r\n  const [error, setError] = useState(null)\r\n  const [show, setShow] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n  let [date, setDate] = useState(new Date());\r\n\r\n  const search = (query) => {\r\n      setLoading(true)\r\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\r\n      .then(res => {\r\n        if(!res.ok){\r\n          throw Error('Unexpected Error')\r\n        }\r\n        return res.json()\r\n      })\r\n      .then(result => { \r\n        console.log(result)\r\n        setWeather(result)\r\n        setShow(true)\r\n        setLoading(false)\r\n      })\r\n      .catch(err => {\r\n        setError(err.message);\r\n        setWeather({})\r\n        setLoading(false)\r\n      })      \r\n  }\r\n \r\n  function Example() {\r\n    return (\r\n      <>\r\n        <Modal show={error}>\r\n          <Modal.Header>\r\n            <Modal.Title>Unexpected Error</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>Location does not exist</Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"primary\" onClick={() => setError(null)} >\r\n              close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n  \r\n  const dateBuilder = (d) => {\r\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n  \r\n    let day = days[d.getDay()]\r\n    let date = d.getDate()\r\n    let month = months[d.getMonth()]\r\n    let year = d.getFullYear()\r\n  \r\n    return `${day}, ${date}th ${month}, ${year}`\r\n  }\r\n  const WeatherCard = () => {\r\n    return <>\r\n    <Card className={indexCSS.weatherCard}>              \r\n      <Card.Body>\r\n        <Card.Title></Card.Title>\r\n          {(typeof weather.main != 'undefined') ? (\r\n            <div className={indexCSS.weatherCardFont}>\r\n              <h4 className={indexCSS.weatherTownAndCountry}>{weather.name}, {weather.sys.country}</h4>\r\n              <h3 className={indexCSS.weatherMain}>{Math.round(weather.main.temp)}Â°C</h3>\r\n              <div className={indexCSS.minMaxTemperature}>\r\n                <p>{Math.round(weather.main.temp_max)}Â°C</p>\r\n                <p>{Math.round(weather.main.temp_min)}Â°C</p>\r\n                <div className={indexCSS.line}></div>\r\n              </div>\r\n              <p>{weather.weather.map(element => {\r\n                return (\r\n                  <div>\r\n                    <img className={indexCSS.weatherIcon} src={\"http://openweathermap.org/img/wn/\" + element.icon + \".png\"} alt=\"No Icon Available\"/>\r\n                    <p className={indexCSS.weatherDescription}>{element.description}</p>\r\n                  </div>\r\n                ) \r\n                })}\r\n              </p>\r\n              {show && <div className={indexCSS.detailsContainer}>\r\n                <div className={indexCSS.details}>\r\n                  <p>Details</p>\r\n                  <div className={indexCSS.lineTwo}></div>\r\n                </div>\r\n                <div className={indexCSS.detailsWeather}>\r\n                  <div>\r\n                    <FaTemperatureHigh />\r\n                    <p>Feels Like: {weather.main.feels_like}Â°C</p>\r\n                  </div>\r\n                  <div>\r\n                    <FiWind />\r\n                    <p>Wind Speed: {weather.wind.speed}m/s</p>\r\n                  </div>\r\n                  <div>\r\n                    <GiWindsock />\r\n                    <p>Wind Direction: {weather.wind.deg}Â°</p>\r\n                  </div>\r\n                  <div>\r\n                    <WiHumidity size=\"30px\"/>\r\n                    <p>Humidity: {weather.main.humidity}%</p>\r\n                  </div>\r\n                  <div>\r\n                    <WiBarometer size=\"30px\"/>\r\n                    <p>Pressure: {weather.main.pressure}hPa</p>\r\n                  </div>\r\n                  <div>\r\n                    <MdVisibility />\r\n                    <p>Visibility: {weather.visibility} m</p>\r\n                  </div>\r\n                </div>\r\n              </div>}\r\n            </div>\r\n            ) : ('')}\r\n        </Card.Body>\r\n    </Card>\r\n    </>\r\n  }\r\n\r\n  return (\r\n    <> \r\n      {error && <Example />}\r\n      <Search onSearch={search}/>\r\n      <Timer/>\r\n      <div className={indexCSS.dateBuilder}>\r\n        {dateBuilder(new Date())}\r\n      </div>\r\n      {loading ? <div className={indexCSS.spinnerContainer}><Spinner animation=\"border\" variant=\"dark\" className={indexCSS.spinner} /></div>  : null  }\r\n      {show && <WeatherCard />}\r\n      {show || <Home />}\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default CurrentWeatherData;\r\n\r\n\r\n","E:\\xampp\\htdocs\\weather-app\\src\\setup\\WeeklyWeather.js",[],"E:\\xampp\\htdocs\\weather-app\\src\\setup\\HourlyWeather.js",["74","75","76"],"import React, {useState} from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport indexCSS from './index.module.css'\r\n\r\n\r\nconst api = {\r\n  key: 'c3512f3ec8bd5a8b7c26d9756efd841c',\r\n  base: 'https://api.openweathermap.org/data/2.5/' \r\n}\r\nconst HourlyWeather = () => {\r\n\r\n  const [weather, setWeather] = useState({});\r\n  const [query, setQuery] = useState('');\r\n  const [hourly, setHourly] = useState([]);\r\n\r\n  const search = evt => {\r\n    if(evt.key === 'Enter'){\r\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        fetch(`${api.base}onecall?lat=${result.coord.lat}&lon=${result.coord.lon}&appid=${api.key}`)\r\n        .then(res => res.json())\r\n        .then(resultDaily => {\r\n          setWeather(resultDaily)\r\n          resultDaily.hourly.length = 24\r\n          setHourlyFiltered(resultDaily.hourly, 3)\r\n        })\r\n      })    \r\n    }\r\n  }\r\n\r\n  \r\n  const hourlyFiltered = (hourly, nth) => {\r\n    return hourly.filter((e, i) => i % nth === nth - 1);\r\n  }\r\n\r\n  const setHourlyFiltered = function(hourly, nth){\r\n    let filteredHourly = hourlyFiltered(hourly, nth)\r\n    setHourly(filteredHourly)\r\n  }\r\n\r\n\r\n  const getDayAndMonth = (weekDay) => {\r\n    const unixTime = weekDay;\r\n    const date = new Date(unixTime*1000);\r\n    \r\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    let day = days[date.getDay()]\r\n    let month = months[date.getMonth()]\r\n    let currentDate = date.getDate()\r\n    return `${day} ${currentDate}th ${month}`\r\n  }\r\n\r\n  const WeatherCard = () => {\r\n    return <>\r\n     <Card style={{ width: '18rem' }}>\r\n      <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\r\n      <Card.Body>\r\n        <Card.Title>Hourly Weather</Card.Title>\r\n          {(typeof hourly != 'undefined') ? (\r\n            <div>{hourly.map(hour => (\r\n              <div>\r\n                <div>Temperature: {Math.round(hour.temp - 273.15)}Â°C</div>\r\n                <div>Pressure: {hour.pressure }hPa</div>\r\n                <div>Humidity: {hour.humidity}%</div>\r\n              </div>\r\n            ))}</div>\r\n          ) : ('')}\r\n        </Card.Body>\r\n    </Card>    \r\n      </>\r\n  }\r\n  \r\n  return (\r\n    <>   \r\n      <div>\r\n        <input type=\"text\" className=\"search\" placeholder='Search...' onChange={e => setQuery(e.target.value)} value={query} onKeyPress={search}/>\r\n      </div>\r\n     <div>\r\n      {<WeatherCard/>}\r\n     </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HourlyWeather;\r\n\r\n\r\n","E:\\xampp\\htdocs\\weather-app\\src\\setup\\Timer.js",[],["77","78"],"E:\\xampp\\htdocs\\weather-app\\src\\setup\\Search.js",["79","80","81"],"import React, {useState, useEffect} from 'react'\r\nimport indexCSS from './index.module.css'\r\n\r\nconst api = {\r\n  key: 'c3512f3ec8bd5a8b7c26d9756efd841c',\r\n  base: 'https://api.openweathermap.org/data/2.5/' \r\n}\r\n\r\nconst Search = (props) => {\r\n  const [query, setQuery] = useState('')  \r\n\r\n  const passSearchTerm = (evt) => {\r\n    if(evt.key == \"Enter\") {\r\n      props.onSearch(query)\r\n    }\r\n  } \r\n\r\n  return (\r\n    <>\r\n      <div className={indexCSS.inputContainer}>\r\n        <input type=\"text\" placeholder=\" Search city...\" value={query} onChange={e => setQuery(e.target.value)} onKeyPress={passSearchTerm}/>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Search\r\n",{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":45,"column":49,"nodeType":"88","endLine":45,"endColumn":127},{"ruleId":"86","severity":1,"message":"87","line":49,"column":58,"nodeType":"88","endLine":49,"endColumn":132},{"ruleId":"86","severity":1,"message":"87","line":50,"column":58,"nodeType":"88","endLine":50,"endColumn":132},{"ruleId":"86","severity":1,"message":"87","line":12,"column":9,"nodeType":"88","endLine":12,"endColumn":85},{"ruleId":"89","severity":1,"message":"90","line":14,"column":38,"nodeType":"91","endLine":14,"endColumn":67},{"ruleId":"92","severity":1,"message":"93","line":1,"column":26,"nodeType":"94","messageId":"95","endLine":1,"endColumn":35},{"ruleId":"92","severity":1,"message":"96","line":4,"column":9,"nodeType":"94","messageId":"95","endLine":4,"endColumn":17},{"ruleId":"92","severity":1,"message":"97","line":25,"column":9,"nodeType":"94","messageId":"95","endLine":25,"endColumn":16},{"ruleId":"92","severity":1,"message":"98","line":30,"column":8,"nodeType":"94","messageId":"95","endLine":30,"endColumn":12},{"ruleId":"92","severity":1,"message":"99","line":30,"column":14,"nodeType":"94","messageId":"95","endLine":30,"endColumn":21},{"ruleId":"92","severity":1,"message":"100","line":3,"column":8,"nodeType":"94","messageId":"95","endLine":3,"endColumn":16},{"ruleId":"92","severity":1,"message":"101","line":12,"column":10,"nodeType":"94","messageId":"95","endLine":12,"endColumn":17},{"ruleId":"92","severity":1,"message":"102","line":43,"column":9,"nodeType":"94","messageId":"95","endLine":43,"endColumn":23},{"ruleId":"82","replacedBy":"103"},{"ruleId":"84","replacedBy":"104"},{"ruleId":"92","severity":1,"message":"93","line":1,"column":26,"nodeType":"94","messageId":"95","endLine":1,"endColumn":35},{"ruleId":"92","severity":1,"message":"105","line":4,"column":7,"nodeType":"94","messageId":"95","endLine":4,"endColumn":10},{"ruleId":"106","severity":1,"message":"107","line":13,"column":16,"nodeType":"108","messageId":"109","endLine":13,"endColumn":18},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donât need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'IoSearch' is defined but never used.","'history' is assigned a value but never used.","'date' is assigned a value but never used.","'setDate' is assigned a value but never used.","'indexCSS' is defined but never used.","'weather' is assigned a value but never used.","'getDayAndMonth' is assigned a value but never used.",["110"],["111"],"'api' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]