[{"E:\\xampp\\htdocs\\weather-app\\src\\index.js":"1","E:\\xampp\\htdocs\\weather-app\\src\\App.js":"2","E:\\xampp\\htdocs\\weather-app\\src\\reportWebVitals.js":"3","E:\\xampp\\htdocs\\weather-app\\src\\setup\\index.js":"4","E:\\xampp\\htdocs\\weather-app\\src\\setup\\About.js":"5","E:\\xampp\\htdocs\\weather-app\\src\\setup\\Home.js":"6","E:\\xampp\\htdocs\\weather-app\\src\\setup\\Error.js":"7","E:\\xampp\\htdocs\\weather-app\\src\\setup\\NavbarPage.js":"8","E:\\xampp\\htdocs\\weather-app\\src\\setup\\CurrentWeatherData.js":"9","E:\\xampp\\htdocs\\weather-app\\src\\setup\\WeeklyWeather.js":"10","E:\\xampp\\htdocs\\weather-app\\src\\setup\\HourlyWeather.js":"11"},{"size":527,"mtime":1612871698969,"results":"12","hashOfConfig":"13"},{"size":122,"mtime":1622377138354,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":858,"mtime":1622047400013,"results":"16","hashOfConfig":"13"},{"size":2843,"mtime":1622028580103,"results":"17","hashOfConfig":"13"},{"size":641,"mtime":1621957534239,"results":"18","hashOfConfig":"13"},{"size":766,"mtime":1622197595486,"results":"19","hashOfConfig":"13"},{"size":1648,"mtime":1622377262045,"results":"20","hashOfConfig":"13"},{"size":5763,"mtime":1622575493049,"results":"21","hashOfConfig":"13"},{"size":5703,"mtime":1622566416422,"results":"22","hashOfConfig":"13"},{"size":2662,"mtime":1621955162747,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1urb182",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},"E:\\xampp\\htdocs\\weather-app\\src\\index.js",[],["50","51"],"E:\\xampp\\htdocs\\weather-app\\src\\App.js",[],"E:\\xampp\\htdocs\\weather-app\\src\\reportWebVitals.js",[],"E:\\xampp\\htdocs\\weather-app\\src\\setup\\index.js",[],"E:\\xampp\\htdocs\\weather-app\\src\\setup\\About.js",["52","53","54"],"import React from  'react';\r\nimport {IoLogoFacebook} from 'react-icons/io'\r\nimport {FiTwitter} from 'react-icons/fi'\r\nimport {ImYoutube2} from 'react-icons/im'\r\nimport {AiFillLinkedin} from 'react-icons/ai'\r\nimport {GrInstagram} from 'react-icons/gr'\r\nimport Image from './assets/openweather-icon.png'\r\nimport Image2 from './assets/google-play.png'\r\nimport Image3 from './assets/app-store.png'\r\nimport aboutCSS from './about.module.css'\r\n\r\nfunction ReturnSection() {\r\n  \r\n  return (\r\n      <footer className={aboutCSS.footerContainer}>\r\n        <div className={aboutCSS.footerDiv}>\r\n          <div className={aboutCSS.greyLineTwo}></div>\r\n          <b className={aboutCSS.weatherAppText}>Connect With Us</b>\r\n          <div id=\"sm\" className={aboutCSS.footerSocialMedia}>\r\n            <a href=\"https://www.facebook.com/\" className={aboutCSS.smFacebook}>\r\n              <IoLogoFacebook size=\"30px\" />\r\n            </a>\r\n            <a href=\"https://twitter.com/\" className={aboutCSS.smTwitter}>\r\n              <FiTwitter size=\"30px\" />\r\n            </a>\r\n            <a href=\"https://www.youtube.com/\" className={aboutCSS.smYoutube}> \r\n              <ImYoutube2 size=\"30px\" />\r\n            </a>\r\n            <a href=\"https://www.instagram.com/\" className={aboutCSS.smInstagram}>\r\n              <GrInstagram size=\"30px\" /> \r\n            </a>\r\n            <a href=\"https://www.linkedin.com/\" className={aboutCSS.smLinkedin}>\r\n              <AiFillLinkedin size=\"30px\" /> \r\n            </a>\r\n          </div>\r\n          <div className={aboutCSS.footerLinks}>\r\n            <a href=\"https://en.wikipedia.org/wiki/Privacy_policy\"><b>Privacy Policy</b></a>\r\n            <p>|</p>\r\n            <a href=\"https://en.wikipedia.org/wiki/Terms_of_service\"><b>Terms Of Service</b></a>\r\n            <p>|</p>\r\n            <a href=\"https://en.wikipedia.org/wiki/FAQ\"><b>FAQ</b></a>\r\n          </div>\r\n          <p className={aboutCSS.weatherAppTextTwo}>Thank you for using WeatherApp!</p>\r\n          <a href=\"https://openweathermap.org/\" className={aboutCSS.weatherAppTextThree}>Powered By OpenWeather</a>\r\n          <a href=\"https://openweathermap.org/\"><img src={Image} className={aboutCSS.weatherImage}  alt=\"No Image Available\"/></a>\r\n          <div className={aboutCSS.greyLine}></div>\r\n          <p className={aboutCSS.weatherAppTextFour}>© 2021 WeatherApp, Inc. \"WeatherApp\" and sun design are registered trademarks of WeatherApp, Inc.</p>\r\n          <div className={aboutCSS.appImages}>\r\n            <a href=\"https://play.google.com/store/apps\"><img src={Image2} className={aboutCSS.appImage} alt=\"No Image Available\"/></a>\r\n            <a href=\"https://play.google.com/store/apps\"><img src={Image3} className={aboutCSS.appImage} alt=\"No Image Available\"/></a>\r\n          </div>\r\n        </div>\r\n      </footer> \r\n  )\r\n}\r\n\r\nexport default ReturnSection;","E:\\xampp\\htdocs\\weather-app\\src\\setup\\Home.js",[],"E:\\xampp\\htdocs\\weather-app\\src\\setup\\Error.js",["55"],"import React from  'react';\r\nimport {Link} from 'react-router-dom'\r\nimport {Button} from 'react-bootstrap'\r\nimport errorCSS from './error.module.css'\r\nimport Image4 from './assets/404-not-found.png'\r\n\r\nconst Error = () => {\r\n\r\n  return (\r\n    <body id=\"bodyId\">\r\n      <div className={errorCSS.errorDiv} >\r\n        <img src={Image4} className={errorCSS.errorImage} alt=\"No Image Available\"/>  \r\n        <h1 className={errorCSS.title}>Whoops!</h1>\r\n        <p>The page you were looking for does not exist! Click on the button to return to the Home Page</p>\r\n        <Link to='/'>\r\n          <Button className={errorCSS.btn} variant=\"primary\">Go Back To Home</Button>{' '}\r\n        </Link>        \r\n      </div> \r\n    </body>\r\n        \r\n  )\r\n}\r\n\r\nexport default Error;","E:\\xampp\\htdocs\\weather-app\\src\\setup\\NavbarPage.js",[],"E:\\xampp\\htdocs\\weather-app\\src\\setup\\CurrentWeatherData.js",["56","57"],"E:\\xampp\\htdocs\\weather-app\\src\\setup\\WeeklyWeather.js",[],"E:\\xampp\\htdocs\\weather-app\\src\\setup\\HourlyWeather.js",["58","59","60"],"import React, {useState} from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport indexCSS from './index.module.css'\r\n\r\n\r\nconst api = {\r\n  key: 'c3512f3ec8bd5a8b7c26d9756efd841c',\r\n  base: 'https://api.openweathermap.org/data/2.5/' \r\n}\r\nconst HourlyWeather = () => {\r\n\r\n  const [weather, setWeather] = useState({});\r\n  const [query, setQuery] = useState('');\r\n  const [hourly, setHourly] = useState([]);\r\n\r\n  const search = evt => {\r\n    if(evt.key === 'Enter'){\r\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        fetch(`${api.base}onecall?lat=${result.coord.lat}&lon=${result.coord.lon}&appid=${api.key}`)\r\n        .then(res => res.json())\r\n        .then(resultDaily => {\r\n          setWeather(resultDaily)\r\n          resultDaily.hourly.length = 24\r\n          setHourlyFiltered(resultDaily.hourly, 3)\r\n        })\r\n      })    \r\n    }\r\n  }\r\n\r\n  \r\n  const hourlyFiltered = (hourly, nth) => {\r\n    return hourly.filter((e, i) => i % nth === nth - 1);\r\n  }\r\n\r\n  const setHourlyFiltered = function(hourly, nth){\r\n    let filteredHourly = hourlyFiltered(hourly, nth)\r\n    setHourly(filteredHourly)\r\n  }\r\n\r\n\r\n  const getDayAndMonth = (weekDay) => {\r\n    const unixTime = weekDay;\r\n    const date = new Date(unixTime*1000);\r\n    \r\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    let day = days[date.getDay()]\r\n    let month = months[date.getMonth()]\r\n    let currentDate = date.getDate()\r\n    return `${day} ${currentDate}th ${month}`\r\n  }\r\n\r\n  const WeatherCard = () => {\r\n    return <>\r\n     <Card style={{ width: '18rem' }}>\r\n      <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\r\n      <Card.Body>\r\n        <Card.Title>Hourly Weather</Card.Title>\r\n          {(typeof hourly != 'undefined') ? (\r\n            <div>{hourly.map(hour => (\r\n              <div>\r\n                <div>Temperature: {Math.round(hour.temp - 273.15)}°C</div>\r\n                <div>Pressure: {hour.pressure }hPa</div>\r\n                <div>Humidity: {hour.humidity}%</div>\r\n              </div>\r\n            ))}</div>\r\n          ) : ('')}\r\n        </Card.Body>\r\n    </Card>    \r\n      </>\r\n  }\r\n  \r\n  return (\r\n    <>   \r\n      <div>\r\n        <input type=\"text\" className=\"search\" placeholder='Search...' onChange={e => setQuery(e.target.value)} value={query} onKeyPress={search}/>\r\n      </div>\r\n     <div>\r\n      {<WeatherCard/>}\r\n     </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HourlyWeather;\r\n\r\n\r\n",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":45,"column":49,"nodeType":"67","endLine":45,"endColumn":127},{"ruleId":"65","severity":1,"message":"66","line":49,"column":58,"nodeType":"67","endLine":49,"endColumn":132},{"ruleId":"65","severity":1,"message":"66","line":50,"column":58,"nodeType":"67","endLine":50,"endColumn":132},{"ruleId":"65","severity":1,"message":"66","line":12,"column":9,"nodeType":"67","endLine":12,"endColumn":85},{"ruleId":"68","severity":1,"message":"69","line":1,"column":26,"nodeType":"70","messageId":"71","endLine":1,"endColumn":35},{"ruleId":"72","severity":1,"message":"73","line":70,"column":61,"nodeType":"74","endLine":70,"endColumn":106},{"ruleId":"68","severity":1,"message":"75","line":3,"column":8,"nodeType":"70","messageId":"71","endLine":3,"endColumn":16},{"ruleId":"68","severity":1,"message":"76","line":12,"column":10,"nodeType":"70","messageId":"71","endLine":12,"endColumn":17},{"ruleId":"68","severity":1,"message":"77","line":43,"column":9,"nodeType":"70","messageId":"71","endLine":43,"endColumn":23},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'indexCSS' is defined but never used.","'weather' is assigned a value but never used.","'getDayAndMonth' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]