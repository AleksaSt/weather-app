[{"E:\\xampp\\htdocs\\weather-app\\src\\index.js":"1","E:\\xampp\\htdocs\\weather-app\\src\\App.js":"2","E:\\xampp\\htdocs\\weather-app\\src\\reportWebVitals.js":"3","E:\\xampp\\htdocs\\weather-app\\src\\setup\\index.js":"4","E:\\xampp\\htdocs\\weather-app\\src\\setup\\About.js":"5","E:\\xampp\\htdocs\\weather-app\\src\\setup\\Home.js":"6","E:\\xampp\\htdocs\\weather-app\\src\\setup\\Error.js":"7","E:\\xampp\\htdocs\\weather-app\\src\\setup\\NavbarPage.js":"8","E:\\xampp\\htdocs\\weather-app\\src\\setup\\CurrentWeatherData.js":"9","E:\\xampp\\htdocs\\weather-app\\src\\setup\\WeeklyWeather.js":"10","E:\\xampp\\htdocs\\weather-app\\src\\setup\\HourlyWeather.js":"11"},{"size":527,"mtime":1612871698969,"results":"12","hashOfConfig":"13"},{"size":167,"mtime":1622050326792,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":858,"mtime":1622047400013,"results":"16","hashOfConfig":"13"},{"size":2843,"mtime":1622028580103,"results":"17","hashOfConfig":"13"},{"size":641,"mtime":1621957534239,"results":"18","hashOfConfig":"13"},{"size":704,"mtime":1622050076011,"results":"19","hashOfConfig":"13"},{"size":1699,"mtime":1621957167452,"results":"20","hashOfConfig":"13"},{"size":5468,"mtime":1622046552447,"results":"21","hashOfConfig":"13"},{"size":5520,"mtime":1622024672338,"results":"22","hashOfConfig":"13"},{"size":2662,"mtime":1621955162747,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1urb182",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},"E:\\xampp\\htdocs\\weather-app\\src\\index.js",[],["48","49"],"E:\\xampp\\htdocs\\weather-app\\src\\App.js",[],"E:\\xampp\\htdocs\\weather-app\\src\\reportWebVitals.js",[],"E:\\xampp\\htdocs\\weather-app\\src\\setup\\index.js",[],"E:\\xampp\\htdocs\\weather-app\\src\\setup\\About.js",["50","51","52"],"E:\\xampp\\htdocs\\weather-app\\src\\setup\\Home.js",[],"E:\\xampp\\htdocs\\weather-app\\src\\setup\\Error.js",["53"],"E:\\xampp\\htdocs\\weather-app\\src\\setup\\NavbarPage.js",[],"E:\\xampp\\htdocs\\weather-app\\src\\setup\\CurrentWeatherData.js",["54","55","56","57"],"E:\\xampp\\htdocs\\weather-app\\src\\setup\\WeeklyWeather.js",[],"E:\\xampp\\htdocs\\weather-app\\src\\setup\\HourlyWeather.js",["58","59","60"],"import React, {useState} from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport indexCSS from './index.module.css'\r\n\r\n\r\nconst api = {\r\n  key: 'c3512f3ec8bd5a8b7c26d9756efd841c',\r\n  base: 'https://api.openweathermap.org/data/2.5/' \r\n}\r\nconst HourlyWeather = () => {\r\n\r\n  const [weather, setWeather] = useState({});\r\n  const [query, setQuery] = useState('');\r\n  const [hourly, setHourly] = useState([]);\r\n\r\n  const search = evt => {\r\n    if(evt.key === 'Enter'){\r\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        fetch(`${api.base}onecall?lat=${result.coord.lat}&lon=${result.coord.lon}&appid=${api.key}`)\r\n        .then(res => res.json())\r\n        .then(resultDaily => {\r\n          setWeather(resultDaily)\r\n          resultDaily.hourly.length = 24\r\n          setHourlyFiltered(resultDaily.hourly, 3)\r\n        })\r\n      })    \r\n    }\r\n  }\r\n\r\n  \r\n  const hourlyFiltered = (hourly, nth) => {\r\n    return hourly.filter((e, i) => i % nth === nth - 1);\r\n  }\r\n\r\n  const setHourlyFiltered = function(hourly, nth){\r\n    let filteredHourly = hourlyFiltered(hourly, nth)\r\n    setHourly(filteredHourly)\r\n  }\r\n\r\n\r\n  const getDayAndMonth = (weekDay) => {\r\n    const unixTime = weekDay;\r\n    const date = new Date(unixTime*1000);\r\n    \r\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    let day = days[date.getDay()]\r\n    let month = months[date.getMonth()]\r\n    let currentDate = date.getDate()\r\n    return `${day} ${currentDate}th ${month}`\r\n  }\r\n\r\n  const WeatherCard = () => {\r\n    return <>\r\n     <Card style={{ width: '18rem' }}>\r\n      <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\r\n      <Card.Body>\r\n        <Card.Title>Hourly Weather</Card.Title>\r\n          {(typeof hourly != 'undefined') ? (\r\n            <div>{hourly.map(hour => (\r\n              <div>\r\n                <div>Temperature: {Math.round(hour.temp - 273.15)}°C</div>\r\n                <div>Pressure: {hour.pressure }hPa</div>\r\n                <div>Humidity: {hour.humidity}%</div>\r\n              </div>\r\n            ))}</div>\r\n          ) : ('')}\r\n        </Card.Body>\r\n    </Card>    \r\n      </>\r\n  }\r\n  \r\n  return (\r\n    <>   \r\n      <div>\r\n        <input type=\"text\" className=\"search\" placeholder='Search...' onChange={e => setQuery(e.target.value)} value={query} onKeyPress={search}/>\r\n      </div>\r\n     <div>\r\n      {<WeatherCard/>}\r\n     </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HourlyWeather;\r\n\r\n\r\n",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":45,"column":49,"nodeType":"67","endLine":45,"endColumn":127},{"ruleId":"65","severity":1,"message":"66","line":49,"column":58,"nodeType":"67","endLine":49,"endColumn":132},{"ruleId":"65","severity":1,"message":"66","line":50,"column":58,"nodeType":"67","endLine":50,"endColumn":132},{"ruleId":"65","severity":1,"message":"66","line":11,"column":7,"nodeType":"67","endLine":11,"endColumn":83},{"ruleId":"68","severity":1,"message":"69","line":1,"column":26,"nodeType":"70","messageId":"71","endLine":1,"endColumn":35},{"ruleId":"68","severity":1,"message":"72","line":25,"column":10,"nodeType":"70","messageId":"71","endLine":25,"endColumn":14},{"ruleId":"68","severity":1,"message":"73","line":25,"column":16,"nodeType":"70","messageId":"71","endLine":25,"endColumn":23},{"ruleId":"74","severity":1,"message":"75","line":62,"column":61,"nodeType":"76","endLine":62,"endColumn":106},{"ruleId":"68","severity":1,"message":"77","line":3,"column":8,"nodeType":"70","messageId":"71","endLine":3,"endColumn":16},{"ruleId":"68","severity":1,"message":"78","line":12,"column":10,"nodeType":"70","messageId":"71","endLine":12,"endColumn":17},{"ruleId":"68","severity":1,"message":"79","line":43,"column":9,"nodeType":"70","messageId":"71","endLine":43,"endColumn":23},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'size' is assigned a value but never used.","'setSize' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'indexCSS' is defined but never used.","'weather' is assigned a value but never used.","'getDayAndMonth' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]